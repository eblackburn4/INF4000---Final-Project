#reshaping the dataframe for plotting, also calculating the differences between hits/non hits so we can order the graph better
hits_v_not <- bind_rows(hits_properties,non_hits_properties, .id = 'type') |>
pivot_longer(cols = 2:8, names_to = "musical_feature", values_to = "average_value") |>
pivot_wider(names_from = type ,values_from = average_value) |>
rename('hits' = 2, 'non_hits' = 3) |>
mutate(diff = hits - non_hits) |>
mutate(musical_feature = as.factor(musical_feature)) |>
group_by(musical_feature) |>
mutate(max=max(hits, non_hits)) |>
mutate(musical_feature=fct_reorder(musical_feature, diff)) |>
ungroup()
hits_v_not <- hits_v_not |>
mutate(diff_max=if_else(hits_v_not$hits==max, "Hits","Non-hits"),
diff_label= paste0("+", abs(diff), diff_max) |>
fct_inorder())
#plot the final lollipop chart, adding data labels to each point and a text geom on the right to show the percentage difference
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 3.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#fde725',
size=3.5 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=3.5 ) +
coord_flip() +
theme_ipsum() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
xlab("Musical property") +
ylab("Index value (0 to 1)")
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 3.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=3.5 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=3.5 ) +
coord_flip() +
theme_ipsum() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
xlab("Musical property") +
ylab("Index value (0 to 1)")
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 3.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=3.5 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=3.5 ) +
coord_flip() +
theme_ipsum() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
labs(title = 'Musical properties of Billboard hot 100 artists\'\ charting and non-charting songs',
subtitle = '1960 - 2018, across all genres',
caption = 'Data from MusicOset',
)
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 3.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=3.5 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=3.5 ) +
coord_flip() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
labs(title = 'Musical properties of Billboard hot 100 artists\'\ charting and non-charting songs',
subtitle = '1960 - 2018, across all genres',
caption = 'Data from MusicOset',
) +
theme_ipsum_rc()
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 5.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=6 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=6 ) +
coord_flip() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
labs(title = 'Musical properties of Billboard hot 100 artists\'\ charting vs. non-charting songs',
subtitle = '1960 - 2018, averaged across all genres',
caption = 'Data from MusicOset. Higher index values = more of that property',
x = 'Index value (0 to 1)',
y = 'Musical property'
) +
theme_ipsum_rc()
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 5.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=6 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=6 ) +
coord_flip() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
labs(title = 'Musical properties of Billboard hot 100 artists\'\ charting vs. non-charting songs',
subtitle = '1960 - 2018, averaged across all genres',
caption = 'Data from MusicOset. Higher index values = more of that property',
x = 'Index value (0 to 1)',
y = 'Musical property'
) +
theme_ipsum_rc(base_size = 12)
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 5.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=6 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=6 ) +
coord_flip() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
labs(title = 'Musical properties of Billboard hot 100 artists\'\ charting vs. non-charting songs',
subtitle = '1960 - 2018, averaged across all genres',
caption = 'Data from MusicOset. Higher index values = more of that property',
x = 'Index value (0 to 1)',
y = 'Musical property'
) +
theme_ipsum_rc(base_size = 16)
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 5.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=6 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=6 ) +
coord_flip() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
labs(title = 'Musical properties of Billboard hot 100 artists\'\ charting vs. non-charting songs',
subtitle = '1960 - 2018, averaged across all genres',
caption = 'Data from MusicOset. Higher index values = more of that property',
x = 'Index value (0 to 1)',
y = 'Musical property'
) +
theme_ipsum_rc(axis_text_size = 12)
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 5.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=6 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=6 ) +
coord_flip() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank()) +
labs(title = 'Musical properties of Billboard hot 100 artists\'\ charting vs. non-charting songs',
subtitle = '1960 - 2018, averaged across all genres',
caption = 'Data from MusicOset. Higher index values = more of that property',
x = 'Index value (0 to 1)',
y = 'Musical property'
) +
theme_ipsum_rc(axis_text_size = 12, axis_title_size = 12)
hits_vs_not_plot
hits_vs_not_plot <- hits_v_not |>
ggplot() +
geom_segment(aes(x=reorder(musical_feature, diff),
xend=reorder(musical_feature, diff),
y=hits, yend=non_hits),
color="lightgrey",
linewidth = 5.5) +
geom_point(aes(x=reorder(musical_feature, diff),
y=hits),
color='#7ad151',
size=6 ) +
geom_point(aes(x=reorder(reorder(musical_feature, diff), diff),
y=non_hits),
color='#440154',
size=6 ) +
coord_flip() +
scale_fill_discrete(labels=c('Hits','Non-hits')) +
theme(panel.grid.major.y = element_blank(),
legend.position = ) +
labs(title = 'Musical properties of artists\'\ charting vs. non-charting songs',
subtitle = '1960 - 2018, averaged across all genres',
caption = 'Data from MusicOset. Higher index values = more of that property',
x = 'Index value (0 to 1)',
y = 'Musical property'
) +
theme_ipsum_rc(axis_text_size = 11, axis_title_size = 10)
hits_vs_not_plot
genre_focus <- c('Hip-Hop', 'Country', 'Rock/Metal', 'Pop', 'Soul/R&B', 'Blues')
bump_plot <- genres_over_time |>
ggplot(aes(x = decade, y = ranking, group = genre_agg)) +
geom_bump(linewidth = 0.9, smooth = 6, color = 'gray90') +
geom_bump(aes(color = genre_agg), linewidth = 1.5,smooth = 6,
data = ~. |> filter(genre_agg %in% genre_focus)) +
geom_point(color = "white", size = 4) +
geom_point(color = "gray90", size = 2) +
geom_point(aes(color = genre_agg), size = 2,
data = ~. |> filter(genre_agg %in% genre_focus)) +
scale_y_reverse(breaks = c(11:1),
expand = c(0.02,0)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "gray50", size = 3.5,
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(!genre_agg %in% genre_focus)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "black", size = 3.5, fontface = 'bold',
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(genre_agg %in% genre_focus)) +
scale_x_continuous(limits = c(1958, 2010), expand = c(0.01,0),
breaks = c(1960, 1970, 1980, 1990, 2000)) +
coord_cartesian(clip = "off") +
labs(
title = "Popularity ranking of genres",
subtitle = "Average ranking by decade, 1960s - 2000s",
x = "",
y = "Popularity Ranking",
color = "Genre",
caption = "Data from MusicOset. Top 10 overall most popular genres only"
) +
theme_ipsum_rc() +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.ticks = element_line(),
plot.title.position = "plot") +
scale_colour_viridis_d()
bump_plot
bump_plot <- genres_over_time |>
ggplot(aes(x = decade, y = ranking, group = genre_agg)) +
geom_bump(linewidth = 0.9, smooth = 6, color = 'gray90') +
geom_bump(aes(color = genre_agg), linewidth = 1.5,smooth = 6,
data = ~. |> filter(genre_agg %in% genre_focus)) +
geom_point(color = "white", size = 4) +
geom_point(color = "gray90", size = 2) +
geom_point(aes(color = genre_agg), size = 2,
data = ~. |> filter(genre_agg %in% genre_focus)) +
scale_y_reverse(breaks = c(11:1),
expand = c(0.02,0)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "gray50", size = 3.5,
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(!genre_agg %in% genre_focus)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "black", size = 3.5, fontface = 'bold',
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(genre_agg %in% genre_focus)) +
scale_x_continuous(limits = c(1958, 2010), expand = c(0.01,0),
breaks = c(1960, 1970, 1980, 1990, 2000)) +
coord_cartesian(clip = "off") +
labs(
title = "Popularity ranking of genres",
subtitle = "Average ranking by decade, 1960s - 2000s",
x = "",
y = "Popularity Ranking",
color = "Genre",
caption = "Data from MusicOset. Top 10 overall most popular genres only."
) +
theme_ipsum_rc(grid = 'Y') +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.ticks = element_line(),
plot.title.position = "plot") +
scale_colour_viridis_d()
bump_plot
bump_plot <- genres_over_time |>
ggplot(aes(x = decade, y = ranking, group = genre_agg)) +
geom_bump(linewidth = 0.9, smooth = 6, color = 'gray90') +
geom_bump(aes(color = genre_agg), linewidth = 1.5,smooth = 6,
data = ~. |> filter(genre_agg %in% genre_focus)) +
geom_point(color = "white", size = 4) +
geom_point(color = "gray90", size = 2) +
geom_point(aes(color = genre_agg), size = 2,
data = ~. |> filter(genre_agg %in% genre_focus)) +
scale_y_reverse(breaks = c(11:1),
expand = c(0.02,0)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "gray50", size = 3.5,
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(!genre_agg %in% genre_focus)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "black", size = 3.5, fontface = 'bold',
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(genre_agg %in% genre_focus)) +
scale_x_continuous(limits = c(1958, 2010), expand = c(0.01,0),
breaks = c(1960, 1970, 1980, 1990, 2000)) +
coord_cartesian(clip = "off") +
labs(
title = "Popularity ranking of genres",
subtitle = "Average ranking by decade, 1960s - 2000s",
x = "",
y = "Popularity Ranking",
color = "Genre",
caption = "Data from MusicOset. Top 10 overall most popular genres only."
) +
theme_ipsum_rc(grid = 'X') +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.ticks = element_line(),
plot.title.position = "plot") +
scale_colour_viridis_d()
bump_plot
bump_plot <- genres_over_time |>
ggplot(aes(x = decade, y = ranking, group = genre_agg)) +
geom_bump(linewidth = 0.9, smooth = 6, color = 'gray90') +
geom_bump(aes(color = genre_agg), linewidth = 1.5,smooth = 6,
data = ~. |> filter(genre_agg %in% genre_focus)) +
geom_point(color = "white", size = 4) +
geom_point(color = "gray90", size = 2) +
geom_point(aes(color = genre_agg), size = 2,
data = ~. |> filter(genre_agg %in% genre_focus)) +
scale_y_reverse(breaks = c(11:1),
expand = c(0.02,0)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "gray50", size = 3.5,
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(!genre_agg %in% genre_focus)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "black", size = 3.5, fontface = 'bold',
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(genre_agg %in% genre_focus)) +
scale_x_continuous(limits = c(1958, 2010), expand = c(0.01,0),
breaks = c(1960, 1970, 1980, 1990, 2000)) +
coord_cartesian(clip = "off") +
labs(
title = "Popularity ranking of genres",
subtitle = "Average ranking by decade, 1960s - 2000s",
x = "",
y = "Popularity Ranking (1 = most popular)",
color = "Genre",
caption = "Data from MusicOset based on chart year-end scores. Top 10 overall most popular genres only."
) +
theme_ipsum_rc(grid = FALSE, ticks = TRUE) +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.ticks = element_line(),
plot.title.position = "plot") +
scale_colour_viridis_d()
bump_plot
genre_focus <- c('Hip-Hop', 'Country', 'Rock/Metal', 'Pop', 'Soul/R&B', 'Blues', 'Adult Contemporary')
bump_plot <- genres_over_time |>
ggplot(aes(x = decade, y = ranking, group = genre_agg)) +
geom_bump(linewidth = 0.9, smooth = 6, color = 'gray90') +
geom_bump(aes(color = genre_agg), linewidth = 1.5,smooth = 6,
data = ~. |> filter(genre_agg %in% genre_focus)) +
geom_point(color = "white", size = 4) +
geom_point(color = "gray90", size = 2) +
geom_point(aes(color = genre_agg), size = 2,
data = ~. |> filter(genre_agg %in% genre_focus)) +
scale_y_reverse(breaks = c(11:1),
expand = c(0.02,0)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "gray50", size = 3.5,
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(!genre_agg %in% genre_focus)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "black", size = 3.5, fontface = 'bold',
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(genre_agg %in% genre_focus)) +
scale_x_continuous(limits = c(1958, 2010), expand = c(0.01,0),
breaks = c(1960, 1970, 1980, 1990, 2000)) +
coord_cartesian(clip = "off") +
labs(
title = "Popularity ranking of genres",
subtitle = "Average ranking by decade, 1960s - 2000s",
x = "",
y = "Popularity Ranking (1 = most popular)",
color = "Genre",
caption = "Data from MusicOset based on chart year-end scores. Top 10 overall most popular genres only."
) +
theme_ipsum_rc(grid = FALSE, ticks = TRUE) +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.ticks = element_line(),
plot.title.position = "plot") +
scale_colour_viridis_d()
genre_focus <- c('Hip-Hop', 'Country', 'Rock/Metal', 'Pop', 'Soul/R&B', 'Blues', 'Adult Contemporary')
bump_plot
genre_focus <- c('Hip-Hop', 'Country', 'Rock/Metal', 'Pop', 'Soul/R&B')
bump_plot <- genres_over_time |>
ggplot(aes(x = decade, y = ranking, group = genre_agg)) +
geom_bump(linewidth = 0.9, smooth = 6, color = 'gray90') +
geom_bump(aes(color = genre_agg), linewidth = 1.5,smooth = 6,
data = ~. |> filter(genre_agg %in% genre_focus)) +
geom_point(color = "white", size = 4) +
geom_point(color = "gray90", size = 2) +
geom_point(aes(color = genre_agg), size = 2,
data = ~. |> filter(genre_agg %in% genre_focus)) +
scale_y_reverse(breaks = c(11:1),
expand = c(0.02,0)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "gray50", size = 3.5,
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(!genre_agg %in% genre_focus)) +
geom_text(aes(label = genre_agg), x = 2001, hjust = 0,
color = "black", size = 3.5, fontface = 'bold',
data = ~. |> slice_max(decade, by = genre_agg) |>
filter(genre_agg %in% genre_focus)) +
scale_x_continuous(limits = c(1958, 2010), expand = c(0.01,0),
breaks = c(1960, 1970, 1980, 1990, 2000)) +
coord_cartesian(clip = "off") +
labs(
title = "Popularity ranking of genres",
subtitle = "Average ranking by decade, 1960s - 2000s",
x = "",
y = "Popularity Ranking (1 = most popular)",
color = "Genre",
caption = "Data from MusicOset based on chart year-end scores. Top 10 overall most popular genres only."
) +
theme_ipsum_rc(grid = FALSE, ticks = TRUE) +
theme(legend.position = "none",
panel.grid = element_blank(),
axis.ticks = element_line(),
plot.title.position = "plot") +
scale_colour_viridis_d()
bump_plot
text_label <- hits_v_not |>
ggplot(aes(x=diff,y=musical_feature)) +
geom_text(aes(x=0, label=gap_label, color=gap_party_max),
fontface="bold",
size=3.25) +
geom_text(aes(x=0, y=7), # 7 because that's the # of y-axis values
label="Diff",
nudge_y =.5, # match the nudge value of the main plot legend
fontface="bold",
size=3.25) +
theme_void() +
coord_cartesian(xlim = c(-.05, 0.05),
ylim=c(1,7.5) # needs to match main plot
)+
theme(
plot.margin = margin(l=0, r=0, b=0, t=0), #otherwise it adds too much space
panel.background = element_rect(fill="#EFEFE3", color="#EFEFE3"),
legend.position = "none"
)+
scale_color_manual(values=c("#436685", "#BF2F24"))
text_label
